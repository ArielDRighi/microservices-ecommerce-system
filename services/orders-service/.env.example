# ================================================
# APLICACIÓN - CONFIGURACIÓN PRINCIPAL
# ================================================

# Entorno de ejecución
NODE_ENV=development
PORT=3000
API_PREFIX=api/v1

# Configuración del servidor
HOST=localhost
CORS_ORIGIN=http://localhost:3000
CORS_CREDENTIALS=true

# ================================================
# BASE DE DATOS - POSTGRESQL
# ================================================

DB_HOST=localhost
DB_PORT=5432
DB_USERNAME=postgres
DB_PASSWORD=your_secure_password_here
DB_NAME=ecommerce_async

# Configuración avanzada de conexión
DB_SYNCHRONIZE=false
DB_LOGGING=true
DB_MAX_CONNECTIONS=10
DB_SSL=false

# ================================================
# REDIS - CACHE Y COLAS
# ================================================

REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0

# Configuración de conexión Redis
REDIS_MAX_RETRIES=3
REDIS_RETRY_DELAY_MS=1000
REDIS_CONNECT_TIMEOUT_MS=5000
REDIS_COMMAND_TIMEOUT_MS=5000

# =================================
# APPLICATION CONFIGURATION
# =================================
NODE_ENV=development
PORT=3000
API_PREFIX=api/v1

# =================================
# CORS CONFIGURATION
# =================================
CORS_ORIGIN=true
CORS_CREDENTIALS=true

# =================================
# SWAGGER DOCUMENTATION
# =================================
ENABLE_SWAGGER=true
SWAGGER_PATH=api/docs

# =================================
# SECURITY CONFIGURATION
# =================================
HELMET_ENABLED=true
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX=1000

# =================================
# LOGGING CONFIGURATION
# =================================
LOG_LEVEL=info
LOG_FORMAT=json

# =================================
# DATABASE CONFIGURATION
# =================================
DATABASE_HOST=localhost
DATABASE_PORT=5432
DATABASE_USERNAME=postgres
DATABASE_PASSWORD=password
DATABASE_NAME=ecommerce_async
DATABASE_SSL=false
RUN_MIGRATIONS=true  # ⚠️ IMPORTANTE: Debe ser true para crear las tablas automáticamente

# =================================
# REDIS CONFIGURATION
# =================================
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0
REDIS_KEY_PREFIX=ecommerce:

# =================================
# BULL QUEUE CONFIGURATION
# =================================
QUEUE_PREFIX=ecommerce_async
BULL_REMOVE_ON_COMPLETE=100
BULL_REMOVE_ON_FAIL=50
BULL_ATTEMPTS=3

# =================================
# JWT CONFIGURATION
# =================================
JWT_SECRET=your-super-secret-jwt-key-change-in-production
JWT_EXPIRES_IN=15m
JWT_ISSUER=ecommerce-async-system
JWT_AUDIENCE=ecommerce-users

# JWT REFRESH TOKEN
JWT_REFRESH_SECRET=your-super-secret-refresh-key-change-in-production
JWT_REFRESH_EXPIRES_IN=7d

# JWT EMAIL VERIFICATION
JWT_VERIFICATION_SECRET=your-super-secret-verification-key-change-in-production
JWT_VERIFICATION_EXPIRES_IN=24h

# JWT PASSWORD RESET
JWT_RESET_PASSWORD_SECRET=your-super-secret-reset-password-key-change-in-production
JWT_RESET_PASSWORD_EXPIRES_IN=1h

# =================================
# DEVELOPMENT CONFIGURATION
# =================================
GIT_COMMIT=local-dev

# ================================================
# SISTEMA DE COLAS (BULL)
# ================================================

QUEUE_PREFIX=ecommerce_async
QUEUE_DEFAULT_JOB_OPTIONS={"removeOnComplete": 100, "removeOnFail": 50, "attempts": 3}

# Bull Board Dashboard Authentication
# ⚠️ IMPORTANTE: Cambiar estas credenciales en producción
BULL_BOARD_USERNAME=admin
BULL_BOARD_PASSWORD=changeme_in_production

# Configuración específica por cola
ORDER_PROCESSING_QUEUE=order-processing
PAYMENT_PROCESSING_QUEUE=payment-processing
INVENTORY_MANAGEMENT_QUEUE=inventory-management
NOTIFICATION_SENDING_QUEUE=notification-sending

# Timeouts de procesamiento (en milisegundos)
ORDER_PROCESSING_TIMEOUT=300000
PAYMENT_PROCESSING_TIMEOUT=60000
INVENTORY_TIMEOUT=30000
NOTIFICATION_TIMEOUT=30000

# ================================================
# SERVICIOS EXTERNOS
# ================================================

# Gateway de Pagos (Mock en desarrollo)
PAYMENT_GATEWAY_URL=https://api.mockpayment.com
PAYMENT_GATEWAY_API_KEY=your-payment-api-key
PAYMENT_GATEWAY_SECRET=your-payment-secret
PAYMENT_WEBHOOK_SECRET=your-webhook-secret

# Proveedor de Email
EMAIL_PROVIDER=mock
EMAIL_PROVIDER_API_KEY=your-email-api-key
EMAIL_FROM_ADDRESS=noreply@ecommerce-async.com
EMAIL_FROM_NAME=Ecommerce Async System

# Proveedor de SMS
SMS_PROVIDER=mock
SMS_PROVIDER_API_KEY=your-sms-api-key
SMS_FROM_NUMBER=+1234567890

# ================================================
# LOGGING Y MONITOREO
# ================================================

# Nivel de logging
LOG_LEVEL=info
LOG_FORMAT=json

# Archivos de log
LOG_FILE_ERROR=logs/error.log
LOG_FILE_COMBINED=logs/combined.log
LOG_MAX_SIZE=20m
LOG_MAX_FILES=14

# Monitoreo
ENABLE_PROMETHEUS=true
PROMETHEUS_PORT=9090
HEALTH_CHECK_TIMEOUT=5000

# ================================================
# SEGURIDAD
# ================================================

# Rate Limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX=1000

# Helmet Security Headers
HELMET_ENABLED=true
HSTS_MAX_AGE=31536000

# CORS Avanzado
CORS_ALLOWED_HEADERS=Content-Type,Authorization,X-Requested-With,X-Idempotency-Key
CORS_METHODS=GET,HEAD,PUT,PATCH,POST,DELETE,OPTIONS

# ================================================
# CARACTERÍSTICAS ESPECÍFICAS DEL SISTEMA
# ================================================

# Configuración de Idempotencia
IDEMPOTENCY_KEY_TTL=3600
IDEMPOTENCY_STORAGE=redis

# Timeouts de Reserva de Inventario
INVENTORY_RESERVATION_TTL=900

# Circuit Breaker Configuration
CIRCUIT_BREAKER_FAILURE_THRESHOLD=5
CIRCUIT_BREAKER_RESET_TIMEOUT=60000

# Retry Configuration
RETRY_ATTEMPTS=3
RETRY_DELAY=1000
RETRY_BACKOFF=exponential

# ================================================
# DESARROLLO Y TESTING
# ================================================

# Testing Database (usar DB diferente para tests)
TEST_DB_NAME=ecommerce_async_test

# Swagger/OpenAPI
ENABLE_SWAGGER=true
SWAGGER_PATH=api/docs

# Hot Reload en Desarrollo
WATCH_MODE=true

# Debugging
DEBUG_NAMESPACE=ecommerce:*

# ================================================
# PRODUCCIÓN (COMENTADAS EN DESARROLLO)
# ================================================

# Uncomment and configure for production:
# SSL_CERT_PATH=/path/to/certificate.pem
# SSL_KEY_PATH=/path/to/private-key.pem
# CLUSTER_MODE=true
# PM2_INSTANCES=max
# SESSION_SECRET=your-session-secret-for-production

# Cloud Database (ejemplo)
# DATABASE_URL=postgresql://username:password@host:port/database?ssl=true

# Redis Cloud (ejemplo)  
# REDIS_URL=rediss://username:password@host:port

# Monitoring en Producción
# SENTRY_DSN=your-sentry-dsn
# NEW_RELIC_LICENSE_KEY=your-new-relic-key

# ================================================
# NOTAS IMPORTANTES
# ================================================
# 
# 1. NUNCA commits este archivo con valores reales
# 2. En producción, usar variables de entorno del sistema
# 3. Rotar secrets regularmente
# 4. Usar herramientas como AWS Secrets Manager en prod
# 5. Validar todas las variables al startup de la app